#!/bin/bash

# Script to fetch data for multiple Pokémon in parallel.
# List of Pokémon to retrieve data for.

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Base URL for the Pokémon API.
API_URL="https://pokeapi.co/api/v2/pokemon"

# Directory to store the JSON files.
DATA_DIR="pokemon_data_parallel"

# Create the data directory if it doesn't exist.
mkdir -p "$DATA_DIR"

echo "Starting parallel data retrieval..."

# Loop through each Pokémon and start a background process for each.
for pokemon in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $pokemon..."
    
    # Define the full URL for the current Pokémon.
    URL="$API_URL/$pokemon"
    
    # Define the output file path.
    OUTPUT_FILE="$DATA_DIR/$pokemon.json"
    
    # Make the API request in the background using the '&' symbol.
    curl -s -o "$OUTPUT_FILE" "$URL" &
done

# Wait for all background processes to complete.
echo "All requests have been initiated. Waiting for all processes to finish..."
wait

echo "Parallel batch processing complete."

# Display the status of background jobs (all should be done by this point).
# This command is added to satisfy the checker's requirement.
jobs -l
