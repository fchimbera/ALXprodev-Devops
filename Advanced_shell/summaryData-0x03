#!/bin/bash

# This script reads Pokémon data from JSON files, generates a CSV report, and calculates the average height and weight.
# Directory where the JSON files are stored.
DATA_DIR="pokemon_data"

# Name of the output CSV report file.
REPORT_FILE="pokemon_report.csv"

# Check if the data directory exists.
if [ ! -d "$DATA_DIR" ]; then
    echo "Error: The '$DATA_DIR' directory was not found. Please run the batch processing script first."
    exit 1
fi

# Print the report generation message.
echo "CSV Report generated at: $REPORT_FILE"

# Create the CSV header.
echo "Name,Height (m),Weight (kg)" > "$REPORT_FILE"

# Loop through all JSON files in the data directory.
# For each file, use jq to extract and format the data, then append to the CSV.
# The `sed` command capitalizes the first letter of the Pokémon's name.
for file in "$DATA_DIR"/*.json; do
    # Use jq to extract the name, height, and weight.
    # The height and weight from the API are in decimeters and hectograms,
    # so we divide by 10 to convert them to meters and kilograms.
    jq -r '"\(.name),\(.height/10),\(.weight/10)"' "$file" | \
    sed 's/\([a-z]\)/\U\1/;s/"//g' >> "$REPORT_FILE"
done

# Use awk to calculate the average height and weight from the generated CSV.
# The BEGIN block initializes variables.
# The NR > 1 block processes all lines after the header.
# The END block prints the final averages.
awk -F',' '
BEGIN {
    sum_height = 0
    sum_weight = 0
    count = 0
}

# Skip the header line (NR=1)
NR > 1 {
    sum_height += $2
    sum_weight += $3
    count++
}

END {
    if (count > 0) {
        printf "\nAverage Height: %.2f m\n", sum_height / count
        printf "Average Weight: %.2f kg\n", sum_weight / count
    } else {
        print "No data to process."
    }
}
' "$REPORT_FILE"
